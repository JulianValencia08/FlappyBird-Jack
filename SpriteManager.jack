class SpriteManager {
    // DIGIT 0
    function void draw_digit0(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 15363);
		do Memory.poke(memAddress+352, 15363);
		do Memory.poke(memAddress+384, 15363);
		do Memory.poke(memAddress+416, 15363);
		do Memory.poke(memAddress+448, 15363);
		do Memory.poke(memAddress+480, 15363);
		do Memory.poke(memAddress+512, 15363);
		do Memory.poke(memAddress+544, 15363);
		do Memory.poke(memAddress+576, 15363);
		do Memory.poke(memAddress+608, 15363);
		do Memory.poke(memAddress+640, 15363);
		do Memory.poke(memAddress+672, 15363);
		do Memory.poke(memAddress+704, 15363);
		do Memory.poke(memAddress+736, 15363);
		do Memory.poke(memAddress+768, 15363);
		do Memory.poke(memAddress+800, 15363);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT ONE
    function void draw_digit1(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -256);
		do Memory.poke(memAddress+32, -256);
		do Memory.poke(memAddress+64, 768);
		do Memory.poke(memAddress+96, 768);
		do Memory.poke(memAddress+128, 768);
		do Memory.poke(memAddress+160, 768);
		do Memory.poke(memAddress+192, 768);
		do Memory.poke(memAddress+224, 768);
		do Memory.poke(memAddress+256, 768);
		do Memory.poke(memAddress+288, 768);
		do Memory.poke(memAddress+320, 16128);
		do Memory.poke(memAddress+352, 16128);
		do Memory.poke(memAddress+384, 12288);
		do Memory.poke(memAddress+416, 12288);
		do Memory.poke(memAddress+448, 12288);
		do Memory.poke(memAddress+480, 12288);
		do Memory.poke(memAddress+512, 12288);
		do Memory.poke(memAddress+544, 12288);
		do Memory.poke(memAddress+576, 12288);
		do Memory.poke(memAddress+608, 12288);
		do Memory.poke(memAddress+640, 12288);
		do Memory.poke(memAddress+672, 12288);
		do Memory.poke(memAddress+704, 12288);
		do Memory.poke(memAddress+736, 12288);
		do Memory.poke(memAddress+768, 12288);
		do Memory.poke(memAddress+800, 12288);
		do Memory.poke(memAddress+832, 12288);
		do Memory.poke(memAddress+864, 12288);
		do Memory.poke(memAddress+896, 12288);
		do Memory.poke(memAddress+928, 12288);
		do Memory.poke(memAddress+960, 12288);
		do Memory.poke(memAddress+992, 12288);
		do Memory.poke(memAddress+1024, 12288);
		do Memory.poke(memAddress+1056, 12288);
		do Memory.poke(memAddress+1088, -4096);
		do Memory.poke(memAddress+1120, -4096);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT TWO
    function void draw_digit2(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 16383);
		do Memory.poke(memAddress+352, 16383);
		do Memory.poke(memAddress+384, 16383);
		do Memory.poke(memAddress+416, 16383);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, -1021);
		do Memory.poke(memAddress+736, -1021);
		do Memory.poke(memAddress+768, -1021);
		do Memory.poke(memAddress+800, -1021);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 255);
		do Memory.poke(memAddress+737, 255);
		do Memory.poke(memAddress+769, 255);
		do Memory.poke(memAddress+801, 255);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT THREE
    function void draw_digit3(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 16383);
		do Memory.poke(memAddress+352, 16383);
		do Memory.poke(memAddress+384, 16383);
		do Memory.poke(memAddress+416, 16383);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, 16383);
		do Memory.poke(memAddress+736, 16383);
		do Memory.poke(memAddress+768, 16383);
		do Memory.poke(memAddress+800, 16383);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT FOUR
    function void draw_digit4(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 15363);
		do Memory.poke(memAddress+96, 15363);
		do Memory.poke(memAddress+128, 15363);
		do Memory.poke(memAddress+160, 15363);
		do Memory.poke(memAddress+192, 15363);
		do Memory.poke(memAddress+224, 15363);
		do Memory.poke(memAddress+256, 15363);
		do Memory.poke(memAddress+288, 15363);
		do Memory.poke(memAddress+320, 15363);
		do Memory.poke(memAddress+352, 15363);
		do Memory.poke(memAddress+384, 15363);
		do Memory.poke(memAddress+416, 15363);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, 16383);
		do Memory.poke(memAddress+736, 16383);
		do Memory.poke(memAddress+768, 12288);
		do Memory.poke(memAddress+800, 12288);
		do Memory.poke(memAddress+832, 12288);
		do Memory.poke(memAddress+864, 12288);
		do Memory.poke(memAddress+896, 12288);
		do Memory.poke(memAddress+928, 12288);
		do Memory.poke(memAddress+960, 12288);
		do Memory.poke(memAddress+992, 12288);
		do Memory.poke(memAddress+1024, 12288);
		do Memory.poke(memAddress+1056, 12288);
		do Memory.poke(memAddress+1088, -4096);
		do Memory.poke(memAddress+1120, -4096);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT FIVE
    function void draw_digit5(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, -1021);
		do Memory.poke(memAddress+352, -1021);
		do Memory.poke(memAddress+384, -1021);
		do Memory.poke(memAddress+416, -1021);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, 16383);
		do Memory.poke(memAddress+736, 16383);
		do Memory.poke(memAddress+768, 16383);
		do Memory.poke(memAddress+800, 16383);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 255);
		do Memory.poke(memAddress+353, 255);
		do Memory.poke(memAddress+385, 255);
		do Memory.poke(memAddress+417, 255);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT SIX
    function void draw_digit6(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, -1021);
		do Memory.poke(memAddress+352, -1021);
		do Memory.poke(memAddress+384, -1021);
		do Memory.poke(memAddress+416, -1021);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, 15363);
		do Memory.poke(memAddress+736, 15363);
		do Memory.poke(memAddress+768, 15363);
		do Memory.poke(memAddress+800, 15363);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 255);
		do Memory.poke(memAddress+353, 255);
		do Memory.poke(memAddress+385, 255);
		do Memory.poke(memAddress+417, 255);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT SEVEN
    function void draw_digit7(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 16383);
		do Memory.poke(memAddress+352, 16383);
		do Memory.poke(memAddress+384, 12288);
		do Memory.poke(memAddress+416, 12288);
		do Memory.poke(memAddress+448, 12288);
		do Memory.poke(memAddress+480, 12288);
		do Memory.poke(memAddress+512, 12288);
		do Memory.poke(memAddress+544, 12288);
		do Memory.poke(memAddress+576, 12288);
		do Memory.poke(memAddress+608, 12288);
		do Memory.poke(memAddress+640, 12288);
		do Memory.poke(memAddress+672, 12288);
		do Memory.poke(memAddress+704, 12288);
		do Memory.poke(memAddress+736, 12288);
		do Memory.poke(memAddress+768, 12288);
		do Memory.poke(memAddress+800, 12288);
		do Memory.poke(memAddress+832, 12288);
		do Memory.poke(memAddress+864, 12288);
		do Memory.poke(memAddress+896, 12288);
		do Memory.poke(memAddress+928, 12288);
		do Memory.poke(memAddress+960, 12288);
		do Memory.poke(memAddress+992, 12288);
		do Memory.poke(memAddress+1024, 12288);
		do Memory.poke(memAddress+1056, 12288);
		do Memory.poke(memAddress+1088, -4096);
		do Memory.poke(memAddress+1120, -4096);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT EIGHT
    function void draw_digit8(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 15363);
		do Memory.poke(memAddress+352, 15363);
		do Memory.poke(memAddress+384, 15363);
		do Memory.poke(memAddress+416, 15363);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, 15363);
		do Memory.poke(memAddress+736, 15363);
		do Memory.poke(memAddress+768, 15363);
		do Memory.poke(memAddress+800, 15363);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // DIGIT NINE
    function void draw_digit9(int location) {
		var int memAddress;
		let memAddress = 16384+location;
		// sprite draw column_0
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, 3);
		do Memory.poke(memAddress+96, 3);
		do Memory.poke(memAddress+128, 3);
		do Memory.poke(memAddress+160, 3);
		do Memory.poke(memAddress+192, 3);
		do Memory.poke(memAddress+224, 3);
		do Memory.poke(memAddress+256, 3);
		do Memory.poke(memAddress+288, 3);
		do Memory.poke(memAddress+320, 15363);
		do Memory.poke(memAddress+352, 15363);
		do Memory.poke(memAddress+384, 15363);
		do Memory.poke(memAddress+416, 15363);
		do Memory.poke(memAddress+448, 3);
		do Memory.poke(memAddress+480, 3);
		do Memory.poke(memAddress+512, 3);
		do Memory.poke(memAddress+544, 3);
		do Memory.poke(memAddress+576, 3);
		do Memory.poke(memAddress+608, 3);
		do Memory.poke(memAddress+640, 3);
		do Memory.poke(memAddress+672, 3);
		do Memory.poke(memAddress+704, 16383);
		do Memory.poke(memAddress+736, 16383);
		do Memory.poke(memAddress+768, 16383);
		do Memory.poke(memAddress+800, 16383);
		do Memory.poke(memAddress+832, 3);
		do Memory.poke(memAddress+864, 3);
		do Memory.poke(memAddress+896, 3);
		do Memory.poke(memAddress+928, 3);
		do Memory.poke(memAddress+960, 3);
		do Memory.poke(memAddress+992, 3);
		do Memory.poke(memAddress+1024, 3);
		do Memory.poke(memAddress+1056, 3);
		do Memory.poke(memAddress+1088, -1);
		do Memory.poke(memAddress+1120, -1);
		// sprite draw column_1
		do Memory.poke(memAddress+1, 255);
		do Memory.poke(memAddress+33, 255);
		do Memory.poke(memAddress+65, 192);
		do Memory.poke(memAddress+97, 192);
		do Memory.poke(memAddress+129, 192);
		do Memory.poke(memAddress+161, 192);
		do Memory.poke(memAddress+193, 192);
		do Memory.poke(memAddress+225, 192);
		do Memory.poke(memAddress+257, 192);
		do Memory.poke(memAddress+289, 192);
		do Memory.poke(memAddress+321, 192);
		do Memory.poke(memAddress+353, 192);
		do Memory.poke(memAddress+385, 192);
		do Memory.poke(memAddress+417, 192);
		do Memory.poke(memAddress+449, 192);
		do Memory.poke(memAddress+481, 192);
		do Memory.poke(memAddress+513, 192);
		do Memory.poke(memAddress+545, 192);
		do Memory.poke(memAddress+577, 192);
		do Memory.poke(memAddress+609, 192);
		do Memory.poke(memAddress+641, 192);
		do Memory.poke(memAddress+673, 192);
		do Memory.poke(memAddress+705, 192);
		do Memory.poke(memAddress+737, 192);
		do Memory.poke(memAddress+769, 192);
		do Memory.poke(memAddress+801, 192);
		do Memory.poke(memAddress+833, 192);
		do Memory.poke(memAddress+865, 192);
		do Memory.poke(memAddress+897, 192);
		do Memory.poke(memAddress+929, 192);
		do Memory.poke(memAddress+961, 192);
		do Memory.poke(memAddress+993, 192);
		do Memory.poke(memAddress+1025, 192);
		do Memory.poke(memAddress+1057, 192);
		do Memory.poke(memAddress+1089, 255);
		do Memory.poke(memAddress+1121, 255);
		return; 
	} 
    // Flappy bird 1 - normal
    function void flappy1(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, -4096);
        do Memory.poke(memAddress +32, -4096);
        do Memory.poke(memAddress +64, 3840);
        do Memory.poke(memAddress +96, 3840);
        do Memory.poke(memAddress +128, 192);
        do Memory.poke(memAddress +160, 192);
        do Memory.poke(memAddress +192, 1020);
        do Memory.poke(memAddress +224, 1020);
        do Memory.poke(memAddress +256, 3843);
        do Memory.poke(memAddress +288, 3843);
        do Memory.poke(memAddress +320, 15363);
        do Memory.poke(memAddress +352, 15363);
        do Memory.poke(memAddress +384, 12291);
        do Memory.poke(memAddress +416, 12291);
        do Memory.poke(memAddress +448, 3084);
        do Memory.poke(memAddress +480, 3084);
        do Memory.poke(memAddress +512, 1008);
        do Memory.poke(memAddress +544, 1008);
        do Memory.poke(memAddress +576, 48);
        do Memory.poke(memAddress +608, 48);
        do Memory.poke(memAddress +640, 960);
        do Memory.poke(memAddress +672, 960);
        do Memory.poke(memAddress +704, -1024);
        do Memory.poke(memAddress +736, -1024);
        // column 1
        do Memory.poke(memAddress +1, 255);
        do Memory.poke(memAddress +33, 255);
        do Memory.poke(memAddress +65, 780);
        do Memory.poke(memAddress +97, 780);
        do Memory.poke(memAddress +129, 3075);
        do Memory.poke(memAddress +161, 3075);
        do Memory.poke(memAddress +193, 13059);
        do Memory.poke(memAddress +225, 13059);
        do Memory.poke(memAddress +257, 13059);
        do Memory.poke(memAddress +289, 13059);
        do Memory.poke(memAddress +321, 12300);
        do Memory.poke(memAddress +353, 12300);
        do Memory.poke(memAddress +385, 16368);
        do Memory.poke(memAddress +417, 16368);
        do Memory.poke(memAddress +449, -16372);
        do Memory.poke(memAddress +481, -16372);
        do Memory.poke(memAddress +513, -13);
        do Memory.poke(memAddress +545, -13);
        do Memory.poke(memAddress +577, 12300);
        do Memory.poke(memAddress +609, 12300);
        do Memory.poke(memAddress +641, 4080);
        do Memory.poke(memAddress +673, 4080);
        do Memory.poke(memAddress +705, 15);
        do Memory.poke(memAddress +737, 15);
        return;
    }
    // Flappy 2 - Normal
    function void flappy2(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, -4096);
        do Memory.poke(memAddress +32, -4096);
        do Memory.poke(memAddress +64, 3840);
        do Memory.poke(memAddress +96, 3840);
        do Memory.poke(memAddress +128, 192);
        do Memory.poke(memAddress +160, 192);
        do Memory.poke(memAddress +192, 48);
        do Memory.poke(memAddress +224, 48);
        do Memory.poke(memAddress +256, 12);
        do Memory.poke(memAddress +288, 12);
        do Memory.poke(memAddress +320, 4092);
        do Memory.poke(memAddress +352, 4092);
        do Memory.poke(memAddress +384, 15375);
        do Memory.poke(memAddress +416, 15375);
        do Memory.poke(memAddress +448, 12291);
        do Memory.poke(memAddress +480, 12291);
        do Memory.poke(memAddress +512, 4092);
        do Memory.poke(memAddress +544, 4092);
        do Memory.poke(memAddress +576, 48);
        do Memory.poke(memAddress +608, 48);
        do Memory.poke(memAddress +640, 960);
        do Memory.poke(memAddress +672, 960);
        do Memory.poke(memAddress +704, -1024);
        do Memory.poke(memAddress +736, -1024);
        // column 1
        do Memory.poke(memAddress +1, 255);
        do Memory.poke(memAddress +33, 255);
        do Memory.poke(memAddress +65, 780);
        do Memory.poke(memAddress +97, 780);
        do Memory.poke(memAddress +129, 3075);
        do Memory.poke(memAddress +161, 3075);
        do Memory.poke(memAddress +193, 13059);
        do Memory.poke(memAddress +225, 13059);
        do Memory.poke(memAddress +257, 13059);
        do Memory.poke(memAddress +289, 13059);
        do Memory.poke(memAddress +321, 12300);
        do Memory.poke(memAddress +353, 12300);
        do Memory.poke(memAddress +385, 16368);
        do Memory.poke(memAddress +417, 16368);
        do Memory.poke(memAddress +449, -16372);
        do Memory.poke(memAddress +481, -16372);
        do Memory.poke(memAddress +513, -13);
        do Memory.poke(memAddress +545, -13);
        do Memory.poke(memAddress +577, 12300);
        do Memory.poke(memAddress +609, 12300);
        do Memory.poke(memAddress +641, 4080);
        do Memory.poke(memAddress +673, 4080);
        do Memory.poke(memAddress +705, 15);
        do Memory.poke(memAddress +737, 15);
        return;
    }
    // Flappy 3 - normal
    function void flappy3(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, -4096);
        do Memory.poke(memAddress +32, -4096);
        do Memory.poke(memAddress +64, 3840);
        do Memory.poke(memAddress +96, 3840);
        do Memory.poke(memAddress +128, 192);
        do Memory.poke(memAddress +160, 192);
        do Memory.poke(memAddress +192, 48);
        do Memory.poke(memAddress +224, 48);
        do Memory.poke(memAddress +256, 12);
        do Memory.poke(memAddress +288, 12);
        do Memory.poke(memAddress +320, 12);
        do Memory.poke(memAddress +352, 12);
        do Memory.poke(memAddress +384, 4092);
        do Memory.poke(memAddress +416, 4092);
        do Memory.poke(memAddress +448, 12291);
        do Memory.poke(memAddress +480, 12291);
        do Memory.poke(memAddress +512, 3075);
        do Memory.poke(memAddress +544, 3075);
        do Memory.poke(memAddress +576, 771);
        do Memory.poke(memAddress +608, 771);
        do Memory.poke(memAddress +640, 1020);
        do Memory.poke(memAddress +672, 1020);
        do Memory.poke(memAddress +704, -1024);
        do Memory.poke(memAddress +736, -1024);
        // column 1
        do Memory.poke(memAddress +1, 255);
        do Memory.poke(memAddress +33, 255);
        do Memory.poke(memAddress +65, 780);
        do Memory.poke(memAddress +97, 780);
        do Memory.poke(memAddress +129, 3075);
        do Memory.poke(memAddress +161, 3075);
        do Memory.poke(memAddress +193, 13059);
        do Memory.poke(memAddress +225, 13059);
        do Memory.poke(memAddress +257, 13059);
        do Memory.poke(memAddress +289, 13059);
        do Memory.poke(memAddress +321, 12300);
        do Memory.poke(memAddress +353, 12300);
        do Memory.poke(memAddress +385, 16368);
        do Memory.poke(memAddress +417, 16368);
        do Memory.poke(memAddress +449, -16372);
        do Memory.poke(memAddress +481, -16372);
        do Memory.poke(memAddress +513, -13);
        do Memory.poke(memAddress +545, -13);
        do Memory.poke(memAddress +577, 12300);
        do Memory.poke(memAddress +609, 12300);
        do Memory.poke(memAddress +641, 4080);
        do Memory.poke(memAddress +673, 4080);
        do Memory.poke(memAddress +705, 15);
        do Memory.poke(memAddress +737, 15);
        return;
    }
    // Flappy 1 - shot
    function void flappy2shot(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, -4096);
        do Memory.poke(memAddress +32, -4096);
        do Memory.poke(memAddress +64, 3840);
        do Memory.poke(memAddress +96, 3840);
        do Memory.poke(memAddress +128, 192);
        do Memory.poke(memAddress +160, 192);
        do Memory.poke(memAddress +192, 1020);
        do Memory.poke(memAddress +224, 1020);
        do Memory.poke(memAddress +256, 3843);
        do Memory.poke(memAddress +288, 3843);
        do Memory.poke(memAddress +320, 15363);
        do Memory.poke(memAddress +352, 15363);
        do Memory.poke(memAddress +384, 12291);
        do Memory.poke(memAddress +416, 12291);
        do Memory.poke(memAddress +448, 3084);
        do Memory.poke(memAddress +480, 3084);
        do Memory.poke(memAddress +512, 1008);
        do Memory.poke(memAddress +544, 1008);
        do Memory.poke(memAddress +576, 48);
        do Memory.poke(memAddress +608, 48);
        do Memory.poke(memAddress +640, 960);
        do Memory.poke(memAddress +672, 960);
        do Memory.poke(memAddress +704, -1024);
        do Memory.poke(memAddress +736, -1024);
        // column 1
        do Memory.poke(memAddress +1, 255);
        do Memory.poke(memAddress +33, 255);
        do Memory.poke(memAddress +65, 780);
        do Memory.poke(memAddress +97, 780);
        do Memory.poke(memAddress +129, 3075);
        do Memory.poke(memAddress +161, 3075);
        do Memory.poke(memAddress +193, 13059);
        do Memory.poke(memAddress +225, 13059);
        do Memory.poke(memAddress +257, 13059);
        do Memory.poke(memAddress +289, 13059);
        do Memory.poke(memAddress +321, 3084);
        do Memory.poke(memAddress +353, -244);
        do Memory.poke(memAddress +385, -32272);
        do Memory.poke(memAddress +417, 31792);
        do Memory.poke(memAddress +449, 956);
        do Memory.poke(memAddress +481, 76);
        do Memory.poke(memAddress +513, 51);
        do Memory.poke(memAddress +545, 243);
        do Memory.poke(memAddress +577, 1804);
        do Memory.poke(memAddress +609, 14348);
        do Memory.poke(memAddress +641, 8208);
        do Memory.poke(memAddress +673, 16368);
        do Memory.poke(memAddress +705, 15);
        do Memory.poke(memAddress +737, 15);
        return;
    }
    // Flappy 3 - shot
    function void flappy3shot(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, -4096);
        do Memory.poke(memAddress +32, -4096);
        do Memory.poke(memAddress +64, 3840);
        do Memory.poke(memAddress +96, 3840);
        do Memory.poke(memAddress +128, 192);
        do Memory.poke(memAddress +160, 192);
        do Memory.poke(memAddress +192, 48);
        do Memory.poke(memAddress +224, 48);
        do Memory.poke(memAddress +256, 12);
        do Memory.poke(memAddress +288, 12);
        do Memory.poke(memAddress +320, 12);
        do Memory.poke(memAddress +352, 12);
        do Memory.poke(memAddress +384, 4092);
        do Memory.poke(memAddress +416, 4092);
        do Memory.poke(memAddress +448, 12291);
        do Memory.poke(memAddress +480, 12291);
        do Memory.poke(memAddress +512, 3075);
        do Memory.poke(memAddress +544, 3075);
        do Memory.poke(memAddress +576, 771);
        do Memory.poke(memAddress +608, 771);
        do Memory.poke(memAddress +640, 1020);
        do Memory.poke(memAddress +672, 1020);
        do Memory.poke(memAddress +704, -1024);
        do Memory.poke(memAddress +736, -1024);
        // column 1
        do Memory.poke(memAddress +1, 255);
        do Memory.poke(memAddress +33, 255);
        do Memory.poke(memAddress +65, 780);
        do Memory.poke(memAddress +97, 780);
        do Memory.poke(memAddress +129, 3075);
        do Memory.poke(memAddress +161, 3075);
        do Memory.poke(memAddress +193, 13059);
        do Memory.poke(memAddress +225, 13059);
        do Memory.poke(memAddress +257, 13059);
        do Memory.poke(memAddress +289, 13059);
        do Memory.poke(memAddress +321, 3084);
        do Memory.poke(memAddress +353, -244);
        do Memory.poke(memAddress +385, -32272);
        do Memory.poke(memAddress +417, 31792);
        do Memory.poke(memAddress +449, 956);
        do Memory.poke(memAddress +481, 76);
        do Memory.poke(memAddress +513, 51);
        do Memory.poke(memAddress +545, 243);
        do Memory.poke(memAddress +577, 1804);
        do Memory.poke(memAddress +609, 14348);
        do Memory.poke(memAddress +641, 8208);
        do Memory.poke(memAddress +673, 16368);
        do Memory.poke(memAddress +705, 15);
        do Memory.poke(memAddress +737, 15);
        return;
    }
    // Shoot
    function void draw(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 192);
        do Memory.poke(memAddress +32, 1016);
        do Memory.poke(memAddress +64, 2044);
        do Memory.poke(memAddress +96, 4095);
        do Memory.poke(memAddress +128, 2044);
        do Memory.poke(memAddress +160, 1016);
        do Memory.poke(memAddress +192, 192);
        return;
    }
}